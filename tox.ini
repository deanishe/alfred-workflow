[pytest]
; addopts = --cov-report term-missing --cov workflow --capture=fd --doctest-modules
; addopts = --cov-report term-missing --capture=fd --doctest-modules
; addopts = --capture=fd --doctest-modules
; addopts = --capture=fd
addopts =
	; --verbose
	--capture=fd
	--cov-config=.coveragerc
	--tb=long
	--color=auto
	--cov-report=""
    --doctest-modules

[tox]
envlist=py27

[testenv]
usedevelop = true
deps =
    pytest
    pytest_httpbin
    pytest_cov
    pytest_localserver
    coverage

commands = ./run-tests.sh

[testenv:py27]
deps =
    {[testenv]deps}
    pyobjc-core
    pyobjc-framework-Cocoa

; [testenv:py26]
; deps =
;     {[testenv]deps}

[pydocstyle]
add_ignore = D105,D203,D266,D400,D401,D413

[flake8]
builtins = unicode
ignore =
    ; Missing docstring in public module
    ; D100,
    ; Missing docstring in public class
    ; D101,
    ; Missing docstring in public method
    ; D102,
    ; Missing docstring in public function
    ; D103,
    ; Missing docstring in public package
    ; D104,
    ; Missing docstring in magic method
    ; D105,
    ; Missing docstring in public nested class
    ; D106,
    ; Missing docstring in __init__
    D107,
    ; One-line docstring should fit on one line with quotes
    ; D200,
    ; No blank lines allowed before function docstring
    ; D201,
    ; No blank lines allowed after function docstring
    ; D202,
    ; 1 blank line required before class docstring
    ; D203,
    ; 1 blank line required after class docstring
    ; D204,
    ; 1 blank line required between summary line and description
    ; D205,
    ; Docstring should be indented with spaces, not tabs
    ; D206,
    ; Docstring is under-indented
    ; D207,
    ; Docstring is over-indented
    ; D208,
    ; Multi-line docstring closing quotes should be on a separate line
    ; D209,
    ; No whitespaces allowed surrounding docstring text
    ; D210,
    ; No blank lines allowed before class docstring
    ; D211,
    ; Multi-line docstring summary should start at the first line
    ; D212,
    ; Multi-line docstring summary should start at the second line
    ; D213,
    ; Section is over-indented
    ; D214,
    ; Section underline is over-indented
    ; D215,
    ; Use """triple double quotes"""
    ; D300,
    ; Use r""" if any backslashes in a docstring
    ; D301,
    ; Use u""" for Unicode docstrings
    ; D302,
    ; First line should end with a period
    D400,
    ; First line should be in imperative mood; try rephrasing
    D401,
    ; First line should not be the function’s “signature”
    ; D402,
    ; First word of the first line should be properly capitalized
    ; D403,
    ; First word of the docstring should not be This
    ; D404,
    ; Section name should be properly capitalized
    ; D405,
    ; Section name should end with a newline
    ; D406,
    ; Missing dashed underline after section
    ; D407,
    ; Section underline should be in the line following the section’s name
    ; D408,
    ; Section underline should match the length of its name
    ; D409,
    ; Missing blank line after section
    ; D410,
    ; Missing blank line before section
    ; D411,
    ; No blank lines allowed between a section header and its content
    ; D412,
    ; Missing blank line after last section
    ; D413,
    ; Section has no content
    ; D414,
    ; First line should end with a period, question mark, or exclamation point
    ; D415,
    ; Section name should end with a colon
    ; D416,
    ; Missing argument descriptions in the docstring
    ; D417,

    ; indentation contains mixed spaces and tabs
    ; E101,
    ; indentation is not a multiple of four
    ; E111,
    ; expected an indented block
    ; E112,
    ; unexpected indentation
    ; E113,
    ; indentation is not a multiple of four (comment)
    ; E114,
    ; expected an indented block (comment)
    ; E115,
    ; unexpected indentation (comment)
    ; E116,
    ; over-indented
    ; E117,
    ; continuation line under-indented for hanging indent
    E121,
    ; continuation line missing indentation or outdented
    ; E122,
    ; closing bracket does not match indentation of opening bracket’s line
    E123,
    ; closing bracket does not match visual indentation
    ; E124,
    ; continuation line with same indent as next logical line
    ; E125,
    ; continuation line over-indented for hanging indent
    E126,
    ; continuation line over-indented for visual indent
    ; E127,
    ; continuation line under-indented for visual indent
    ; E128,
    ; visually indented line with same indent as next logical line
    ; E129,
    ; continuation line unaligned for hanging indent
    ; E131,
    ; closing bracket is missing indentation
    E133,
    ; whitespace after ‘(‘
    ; E201,
    ; whitespace before ‘)’
    ; E202,
    ; whitespace before ‘:’
    ; E203,
    ; whitespace before ‘(‘
    ; E211,
    ; multiple spaces before operator
    ; E221,
    ; multiple spaces after operator
    ; E222,
    ; tab before operator
    ; E223,
    ; tab after operator
    ; E224,
    ; missing whitespace around operator
    ; E225,
    ; missing whitespace around arithmetic operator
    E226,
    ; missing whitespace around bitwise or shift operator
    ; E227,
    ; missing whitespace around modulo operator
    ; E228,
    ; missing whitespace after ‘,’, ‘;’, or ‘:’
    ; E231,
    ; multiple spaces after ‘,’
    ; E241,
    ; tab after ‘,’
    ; E242,
    ; unexpected spaces around keyword / parameter equals
    ; E251,
    ; at least two spaces before inline comment
    ; E261,
    ; inline comment should start with ‘# ‘
    ; E262,
    ; block comment should start with ‘# ‘
    ; E265,
    ; too many leading ‘#’ for block comment
    ; E266,
    ; multiple spaces after keyword
    ; E271,
    ; multiple spaces before keyword
    ; E272,
    ; tab after keyword
    ; E273,
    ; tab before keyword
    ; E274,
    ; missing whitespace after keyword
    ; E275,
    ; expected 1 blank line, found 0
    ; E301,
    ; expected 2 blank lines, found 0
    ; E302,
    ; too many blank lines (3)
    ; E303,
    ; blank lines found after function decorator
    ; E304,
    ; expected 2 blank lines after end of function or class
    ; E305,
    ; expected 1 blank line before a nested definition
    ; E306,
    ; multiple imports on one line
    ; E401,
    ; module level import not at top of file
    E402,
    ; line too long (82 > 79 characters)
    ; E501,
    ; the backslash is redundant between brackets
    ; E502,
    ; multiple statements on one line (colon)
    ; E701,
    ; multiple statements on one line (semicolon)
    ; E702,
    ; statement ends with a semicolon
    ; E703,
    ; multiple statements on one line (def)
    E704,
    ; comparison to None should be ‘if cond is None:’
    ; E711,
    ; comparison to True should be ‘if cond is True:’ or ‘if cond:’
    ; E712,
    ; test for membership should be ‘not in’
    ; E713,
    ; test for object identity should be ‘is not’
    ; E714,
    ; do not compare types, use ‘isinstance()’
    ; E721,
    ; do not use bare except, specify exception instead
    ; E722,
    ; do not assign a lambda expression, use a def
    ; E731,
    ; do not use variables named ‘l’, ‘O’, or ‘I’
    ; E741,
    ; do not define classes named ‘l’, ‘O’, or ‘I’
    ; E742,
    ; do not define functions named ‘l’, ‘O’, or ‘I’
    ; E743,
    ; SyntaxError or IndentationError
    ; E901,
    ; IOError
    ; E902,
    ; indentation contains tabs

    ; W191,
    ; trailing whitespace
    ; W291,
    ; no newline at end of file
    ; W292,
    ; blank line contains whitespace
    ; W293,
    ; blank line at end of file
    ; W391,
    ; line break before binary operator
    W503,
    ; line break after binary operator
    W504,
    ; doc line too long (82 > 79 characters)
    ; W505,
    ; .has_key() is deprecated, use ‘in’
    ; W601,
    ; deprecated form of raising exception
    ; W602,
    ; ‘<>’ is deprecated, use ‘!=’
    ; W603,
    ; backticks are deprecated, use ‘repr()’
    ; W604,
    ; invalid escape sequence ‘x’
    ; W605,
    ; ‘async’ and ‘await’ are reserved keywords starting with Python 3.7
    ; W606,
    ; module imported but unused
    ; F401,
    ; import module from line N shadowed by loop variable
    ; F402,
    ; ‘from module import *’ used; unable to detect undefined names
    ; F403,
    ; future import(s) name after other statements
    ; F404,
    ; name may be undefined, or defined from star imports: module
    ; F405,
    ; redefinition of unused name from line N
    ; F811,
    ; list comprehension redefines name from line N
    ; F812,
    ; undefined name name
    ; F821,
    ; undefined name name in __all__
    ; F822,
    ; local variable name ... referenced before assignment
    ; F823,
    ; duplicate argument name in function definition
    ; F831,
    ; local variable name is assigned to but never used
    ; F841,

    ; flake8-future-import. Ignore everything to make all
    ; from __future__ imports optional
    FI10,
    FI11,
    FI12,
    FI13,
    FI14,
    FI15,
    FI16,
    FI17,
    FI50,
    FI51,
    FI52,
    FI53,
    FI54,
    FI55,
    FI56,
    FI57,
    FI90,

    ; class names should use CapWords convention
    ; N801,
    ; function name should be lowercase
    ; N802,
    ; argument name should be lowercase
    ; N803,
    ; first argument of a classmethod should be named 'cls'
    ; N804,
    ; first argument of a method should be named 'self'
    ; N805,
    ; variable in function should be lowercase
    ; N806,
    ; function name should not start and end with '__'
    ; N807,
    ; constant imported as non constant
    ; N811,
    ; lowercase imported as non lowercase
    ; N812,
    ; camelcase imported as lowercase
    ; N813,
    ; camelcase imported as constant
    ; N814,
    ; mixedCase variable in class scope
    ; N815,
    ; mixedCase variable in global scope
    ; N816,
    ; camelcase imported as acronym
    ; N817

exclude =
    .git,
    __pycache__,
    build,
    dist,

max-line-length = 90
